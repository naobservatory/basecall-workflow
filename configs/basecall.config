/************************************************
| CONFIGURATION FILE FOR NAO BASECALL WORKFLOW |
************************************************/

params {
    mode = "basecall"

    // Basecalling parameters
    duplex = false
    demux = true
    // kit = <ONT_KIT> // format: "XXX-XXXXXX-XX"; fill with your desired kit and uncomment

    // Delivery
    // nanopore_run = <NANOPORE_RUN> // format: "NAO-ONT-YYYYMMDD-LIBRARY"; fill with your run and uncomment

    // Directories
    // base_dir = "s3://<PRODUCTION_S3_BUCKET>/${nanopore_run}" // Parent for raw FASTQ directory; fill with your value and uncomment
    // work_dir = "s3://<WORKING_S3_BUCKET>/${nanopore_run}" // Parent for working directory; fill with your value and uncomment

    // Barcodes (on s3 by default)
    // barcodes = "s3://${base_bucket}/${nanopore_run}/supplemental/barcodes.tsv" // Barcodes: fill with your value and uncomment

    // AWS queue 
    // Note that we define aws_queue as a parameter and then assign process.queue = params.aws_queue
    // rather than setting process.queue directly.
    // This enables setting the queue from the command line when we start nextflow, with --aws_queue yourqueue,
    // which is handy for automation.
    // aws_queue = <YOUR GPU QUEUE> // Fill with your value and uncomment

}

includeConfig "${projectDir}/configs/containers.config"
includeConfig "${projectDir}/configs/resources.config"
includeConfig "${projectDir}/configs/profiles.config"
includeConfig "${projectDir}/configs/output.config"
includeConfig "${projectDir}/configs/logging.config"
nextflow.enable.moduleBinaries = true

process.queue = params.aws_queue 


